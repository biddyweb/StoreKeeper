USED_CONFIG: DefaultConfig


DefaultConfig:
  App:
    NAME: "storekeeper"
    TITLE: "StoreKeeper"
    FORCED_LANGUAGE: NULL

    MIGRATE_REPO_PATH: "$BASEDIR/db_repository"
    SHARE_STATIC: True

    ADMIN_PAGE: False
    ADMIN_MANAGE_STATIC: False

    # Set to DEFAULT for use default Cups printer
    LABEL_PRINTER: DEFAULT
    LABEL_BORDER: False

  Flask:
    DEBUG: False
    TESTING: False

    # http://flask.pocoo.org/docs/0.10/config/
    SECRET_KEY: PleaseChangeThisImportantSecretString

    # https://pythonhosted.org/Flask-SQLAlchemy/config.html
    SQLALCHEMY_DATABASE_URI: "sqlite:///$BASEDIR/app.sqlite"

  Log:
    # The log level (LEVEL) should be: CRITICAL, ERROR, WARNING, INFO, DEBUG, NOTSET

    ToFile:
      ENABLED: False
      LEVEL: INFO

      PATH: "$BASEDIR/tmp/storekeeper.log"
      MAX_SIXE_IN_MB: 10
      HOLD_COUNT: 5

    ToEmail:
      ENABLED: False
      LEVEL: ERROR

      SERVER: bar.com
      PORT: 25
      USERNAME: None
      PASSWORD: None

      SENDER: no-reply@storekeeper
      RECIPIENTS:
        - foo@bar.com

    ToSyslog:
      # The TRANSPORT should be: UDP, TCP

      ENABLED: False
      LEVEL: WARNING

      ADDRESS: log.bar
      TRANSPORT: TCP
      PORT: 514


ProductionConfig:
  Base: DefaultConfig

  App:
    SHARE_STATIC: False

  Flask:
    SQLALCHEMY_DATABASE_URI: "mysql+pymysql://storekeeper:StoreKeeper@localhost/storekeeper"

  Log:
    ToEmail:
      ENABLED: True


DevelopmentConfig:
  Base: DefaultConfig

  App:
    ADMIN_PAGE: True
    ADMIN_MANAGE_STATIC: True

  Flask:
    WTF_CSRF_ENABLED: False
    DEBUG: True

    # http://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-xvi-debugging-testing-and-profiling
    # SQLALCHEMY_RECORD_QUERIES: True
    SQLALCHEMY_ECHO: True


TestingConfig:
  Base: DefaultConfig

  App:
    MIGRATE_REPO_PATH: "$BASEDIR/tmp/test_db_repository"

  Flask:
    WTF_CSRF_ENABLED: False
    TESTING: True

    # Most of SQL related tests override this settings and use in-memory database, however tests of DatabaseMaintenance
    # class have to use file based database!
    SQLALCHEMY_DATABASE_URI: "sqlite:///$BASEDIR/tmp/test.sqlite"
